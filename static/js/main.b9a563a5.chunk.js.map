{"version":3,"sources":["fbase.js","components/CoinBoard.js","components/Announcement.js","routes/Home.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","Rainbow","styled","div","Silver","Gold","Bronze","Normal","CoinBoard","board","spacing","sort","a","b","coin","map","data","index","src","photoURL","ml","fontWeight","displayName","colorScheme","fontSize","id","Announcement","as","Home","user","useState","setBoard","userCoin","setUserCoin","buttonClicked","setButtonClicked","toast","useToast","useEffect","collection","onSnapshot","snapshot","newArray","docs","document","length","filter","uid","reduce","pre","val","matchUserSavedData","getMatchUserSavedData","curr","Date","utc","getTime","getTimezoneOffset","KR_TIME_DIFF","kr_curr","checkTime","updatedAt","now","last","getFullYear","toString","getMonth","getDate","getRandomInt","min","max","byteArray","Uint8Array","window","crypto","getRandomValues","range","Math","floor","addCoin","documentId","find","randomCoin","doc","update","coupon","add","createdAt","title","description","status","duration","isClosable","padding","bg","space","border","borderColor","type","mr","onClick","Auth","onSocialClick","event","target","name","provider","GoogleAuthProvider","signInWithPopup","console","log","centerContent","leftIcon","Profile","email","signOut","Navigation","borderTopLeftRadius","borderTopRightRadius","to","AppRouter","isLoggedIn","basename","exact","path","from","App","init","setInit","setIsLoggedIn","onAuthStateChanged","borderBottomLeftRadius","borderBottomRightRadius","style","color","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9a563a5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\n","import {\r\n  List,\r\n  ListItem,\r\n  Flex,\r\n  Avatar,\r\n  Box,\r\n  Text,\r\n  Badge,\r\n  Button,\r\n  Spacer\r\n} from \"@chakra-ui/react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Rainbow = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(\r\n    124deg,\r\n    #ff2400,\r\n    #e81d1d,\r\n    #e8b71d,\r\n    #e3e81d,\r\n    #1de840,\r\n    #1ddde8,\r\n    #2b1de8,\r\n    #dd00f3,\r\n    #dd00f3\r\n  );\r\n  color: #ffffff;\r\n  background-size: 1800% 1800%;\r\n  border-radius: 2px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  margin-bottom: 4px;\r\n\r\n  -webkit-animation: rainbow 18s ease infinite;\r\n  -z-animation: rainbow 18s ease infinite;\r\n  -o-animation: rainbow 18s ease infinite;\r\n  animation: rainbow 18s ease infinite;\r\n\r\n  @-webkit-keyframes rainbow {\r\n    0% {\r\n      background-position: 0% 82%;\r\n    }\r\n    50% {\r\n      background-position: 100% 19%;\r\n    }\r\n    100% {\r\n      background-position: 0% 82%;\r\n    }\r\n  }\r\n  @-moz-keyframes rainbow {\r\n    0% {\r\n      background-position: 0% 82%;\r\n    }\r\n    50% {\r\n      background-position: 100% 19%;\r\n    }\r\n    100% {\r\n      background-position: 0% 82%;\r\n    }\r\n  }\r\n  @-o-keyframes rainbow {\r\n    0% {\r\n      background-position: 0% 82%;\r\n    }\r\n    50% {\r\n      background-position: 100% 19%;\r\n    }\r\n    100% {\r\n      background-position: 0% 82%;\r\n    }\r\n  }\r\n  @keyframes rainbow {\r\n    0% {\r\n      background-position: 0% 82%;\r\n    }\r\n    50% {\r\n      background-position: 100% 19%;\r\n    }\r\n    100% {\r\n      background-position: 0% 82%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Silver = styled.div`\r\n  background-color: #c0c0c0;\r\n  color: #ffffff;\r\n  border-radius: 2px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  margin-bottom: 4px;\r\n`;\r\nconst Gold = styled.div`\r\n  background-color: #ffd700;\r\n  color: #ffffff;\r\n  border-radius: 2px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  margin-bottom: 4px;\r\n`;\r\nconst Bronze = styled.div`\r\n  background-color: #b08d57;\r\n  color: #ffffff;\r\n  border-radius: 2px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  margin-bottom: 4px;\r\n`;\r\nconst Normal = styled.div`\r\n  background-color: #d3d3d3;\r\n  color: #ffffff;\r\n  border-radius: 2px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nconst CoinBoard = ({ board }) => {\r\n  return (\r\n    <List spacing={3}>\r\n      {board\r\n        .sort((a, b) => b.coin - a.coin)\r\n        .map((data, index) => (\r\n          <ListItem key={data.id}>\r\n            <Flex>\r\n              <Avatar src={data.photoURL} />\r\n              <Box>\r\n                <Box ml=\"5\">\r\n                  <Text fontWeight=\"bold\">\r\n                    {index === 0 ? (\r\n                      <>🥇{data.displayName}</>\r\n                    ) : index === 1 ? (\r\n                      <>🥈{data.displayName}</>\r\n                    ) : index === 2 ? (\r\n                      <>🥉{data.displayName}</>\r\n                    ) : (\r\n                      <>{data.displayName}</>\r\n                    )}\r\n                    <Badge ml={2} colorScheme=\"\">\r\n                      {index === 0 ? (\r\n                        <Rainbow>{index + 1}등</Rainbow>\r\n                      ) : index === 1 ? (\r\n                        <Gold>{index + 1}등</Gold>\r\n                      ) : index === 2 ? (\r\n                        <Silver>{index + 1}등</Silver>\r\n                      ) : index === 3 ? (\r\n                        <Bronze>{index + 1}등</Bronze>\r\n                      ) : (\r\n                        <Normal>{index + 1}등</Normal>\r\n                      )}\r\n                    </Badge>\r\n                  </Text>\r\n                  <Text fontSize=\"sm\">{data.coin}</Text>\r\n                </Box>\r\n              </Box>\r\n            </Flex>\r\n          </ListItem>\r\n        ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CoinBoard;\r\n","import { Text } from \"@chakra-ui/react\";\r\n\r\nconst Announcement = () => {\r\n    return <Text as=\"i\">🎰 비-현실 코인 도박 업데이트 준비 중!</Text>\r\n}\r\n\r\nexport default Announcement;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Container, Box, Button, Spacer, Flex } from \"@chakra-ui/react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\nimport CoinBoard from \"components/CoinBoard\";\r\nimport Announcement from \"components/Announcement\";\r\n\r\nconst Home = ({ user }) => {\r\n  const [board, setBoard] = useState([]);\r\n  const [userCoin, setUserCoin] = useState(0);\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"cio\").onSnapshot((snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setBoard(newArray);\r\n      if (newArray.length > 0) {\r\n        setUserCoin(\r\n          newArray\r\n            .filter((data) => data.uid === user.uid)\r\n            .reduce((pre, val) => {\r\n              return pre + val.coin;\r\n            }, 0)\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const matchUserSavedData = getMatchUserSavedData();\r\n\r\n    const curr = new Date();\r\n    const utc = curr.getTime() + curr.getTimezoneOffset() * 60 * 1000;\r\n    const KR_TIME_DIFF = 9 * 60 * 60 * 1000;\r\n    const kr_curr = new Date(utc + KR_TIME_DIFF);\r\n\r\n    if (matchUserSavedData) {\r\n      setButtonClicked(\r\n        checkTime(\r\n          kr_curr,\r\n          new Date(matchUserSavedData.updatedAt + KR_TIME_DIFF)\r\n        )\r\n      );\r\n    }\r\n  }, [board]);\r\n\r\n  const checkTime = (now, last) => {\r\n    const nowDateString =\r\n      now.getFullYear().toString() +\r\n      now.getMonth().toString() +\r\n      now.getDate().toString();\r\n    const lastDateString =\r\n      last.getFullYear().toString() +\r\n      last.getMonth().toString() +\r\n      last.getDate().toString();\r\n      \r\n    return nowDateString >= lastDateString;\r\n  };\r\n\r\n  const getMatchUserSavedData = () => {\r\n    return board.filter((data) => data.uid === user.uid)[0];\r\n  };\r\n\r\n  const getRandomInt = (min, max) => {\r\n    var byteArray = new Uint8Array(1);\r\n    window.crypto.getRandomValues(byteArray);\r\n\r\n    var range = max - min + 1;\r\n    var max_range = 256;\r\n    if (byteArray[0] >= Math.floor(max_range / range) * range)\r\n      return getRandomInt(min, max);\r\n    return min + (byteArray[0] % range);\r\n  };\r\n\r\n  const addCoin = async () => {\r\n    const documentId = board.find((data) => data.uid === user.uid);\r\n    const randomCoin = getRandomInt(0, 99);\r\n\r\n    if (documentId) {\r\n      await dbService.doc(`cio/${documentId.id}`).update({\r\n        coin: userCoin + randomCoin,\r\n        coupon: getMatchUserSavedData().coupon + 1,\r\n        updatedAt: Date.now(),\r\n      });\r\n    } else {\r\n      await dbService.collection(\"cio\").add({\r\n        coin: randomCoin,\r\n        coupon: 1,\r\n        createdAt: Date.now(),\r\n        uid: user.uid,\r\n        displayName: user.displayName,\r\n        updatedAt: Date.now(),\r\n        photoURL: user.photoURL,\r\n      });\r\n    }\r\n\r\n    toast({\r\n      title: \"코인이 적립되었습니다.\",\r\n      description: `코인이 ${randomCoin}개 적립되었습니다.`,\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n\r\n    setButtonClicked(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box padding=\"4\" bg=\"#f8eded\">\r\n        <Flex space=\"4\">\r\n          <Box>\r\n            {buttonClicked ? (\r\n              <Button bg=\"#eeb76b\" border=\"2px\" borderColor=\"#E9AD03\">\r\n                🙌 적립 완료!\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                mr=\"-px\"\r\n                bg=\"#eeb76b\"\r\n                border=\"2px\"\r\n                borderColor=\"#E9AD03\"\r\n                onClick={addCoin}\r\n              >\r\n                💰 오늘의 코인 적립\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Box>\r\n            <Button bg=\"#e798ae\" border=\"2px\" ml={4} borderColor=\"#e4bad4\">\r\n              🎟️ 티켓 구입\r\n            </Button>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      <Box padding=\"4\" bg=\"#f6dfeb\">\r\n        <CoinBoard user={user} board={board} />\r\n      </Box>\r\n      <Box padding=\"4\" bg=\"#faf3f3\">\r\n        <Announcement />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport { Button, ButtonGroup, Container, Box } from \"@chakra-ui/react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    let provider;\r\n    if (event.target.name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <Container centerContent>\r\n      <Box padding=\"4\" bg=\"gray.100\">\r\n        <Button\r\n          leftIcon={<FcGoogle />}\r\n          colorScheme=\"messenger\"\r\n          onClick={onSocialClick}\r\n          name=\"google\"\r\n        >\r\n          구글 로그인\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { authService } from \"fbase\";\r\nimport { Container, Box } from \"@chakra-ui/react\";\r\n\r\nconst Profile = ({ user }) => {\r\n  const onLogOutClick = () => authService.signOut();\r\n  return (\r\n    <Container>\r\n      <Box padding=\"4\" bg=\"gray.100\">\r\n        <li>\r\n          <img src={user.photoURL} />\r\n        </li>\r\n        <li>로그인한 계정 {user.displayName}</li>\r\n        <li>로그인한 이메일 {user.email}</li>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbSeparator,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ user }) => {\r\n  return (\r\n    <Container>\r\n      <Box\r\n        padding=\"4\"\r\n        bg=\"#caf7e3\"\r\n        borderTopLeftRadius={5}\r\n        borderTopRightRadius={5}\r\n      >\r\n        <Breadcrumb fontWeight=\"medium\" fontSize=\"sm\">\r\n          <BreadcrumbItem>\r\n            <Link to=\"/\">홈</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/profile\">{user.displayName}님 반갑습니다!</Link>\r\n          </BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  BrowserRouter \r\n} from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn }) => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Router>\r\n      {isLoggedIn && <Navigation user={isLoggedIn} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home user={isLoggedIn} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile user={isLoggedIn} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import AppRouter from \"components/Router\";\r\nimport { ChakraProvider, Container, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsLoggedIn(user);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n    });\r\n    setInit(true);\r\n  }, []);\r\n  return (\r\n    <ChakraProvider>\r\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"initializing...\"}\r\n      <Container>\r\n        <Box\r\n          padding=\"4\"\r\n          bg=\"#e4bad4\"\r\n          borderBottomLeftRadius={5}\r\n          borderBottomRightRadius={5}\r\n        >\r\n          <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n            🦄 출첵코인, {new Date().getFullYear()}{\" \"}\r\n          </Text>\r\n        </Box>\r\n      </Container>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}